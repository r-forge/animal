%!PS-Adobe-2.0 EPSF-1.2%%Title: 4MMPR3V8_Maatalous-4____RGB.FH8%%Creator: FreeHand 8.0.1%%CreationDate: 16.12.2003 15:45%%BoundingBox: 0 0 43 43%%FHPathName:ibari40:Duunit:7_LogoDomainStuff:HY:TUNNUKSET:NELJANNESTUNNUKSET:2_Tiedekunnat:MAC FH8:4MMPR3V8_Maatalous-4____RGB.FH8%ALDOriginalFile:ibari40:Duunit:7_LogoDomainStuff:HY:TUNNUKSET:NELJANNESTUNNUKSET:2_Tiedekunnat:MAC FH8:4MMPR3V8_Maatalous-4____RGB.FH8%ALDBoundingBox: 0 0 42 42%%FHPageNum:1%%DocumentSuppliedResources: procset Altsys_header 4 0%%ColorUsage: Color%%DocumentProcessColors: Cyan Magenta Yellow Black%%CMYKProcessColor: 1 0.3098 0.451 0 (0r 176g 140b)%%+ 0.451 0.4588 0.4706 0 (140r 138g 135b)%%EndComments%%BeginAGDEmbeddedDoc: version 1.0%:s8W,W5t==!^::f!!!!k3!!3-(<,$2\ErZ1?!#knq!([)d3&,]=%:!!!U0!!3-C!)*B$!-8-O!-/'31B;NILd(kr!&"=/!)5BP:]PDo!H\<?+:%sW4TT6sDuat[/-&L0!(-`a-ia6=2ZQf?!*fM/!*9/7!,_cl2,F9g4T\1XFu]\G2$%AF"#KuX!rr[P!)[HJ:i^8fFCfIm!$2+?GQ7gG!"]-$!([+j!n[Q&s5F";!r2me!6PC5"XjKN!!3-#])_m4!!$O0!!-S\!!!*$!!*2b0`aWB"oobO!#Yg!3=#gl%:!<>B<";q1>!rr^'@:NLI;Is><2$aBd6i]tB%WVPd3tQ3."98s2ATW$.!$H/l7VQ[M:18!N$NLA2$ij?O!!$@T'*S[B#daZAK`M0#9gM,H!\s`VPaYN^@:s"jAKW`.0Lc$C9h%/D='nX0F(KAaATT%T&H[Ia!!dI^A4?b'0FnCE3AWEF2BVuR!&=fg6ZmHlDf&E_Eb/g"huj)]M@MfXA7]glEbTK7Bl>s3#ljs5+>GZ41+k@A1I3sr%:2$>Tr!&ubg/hpf816)>9!!N?73!XOnDdug^ATpLTKOoKI6khT]!!N?6]`D&A@;KQe%fclg4#AZE#;@8Z2p21U1,goC!&--8!&V@h8IQ&&@:NAQDId[0;e^Qn5Z.bP'K?(M!,MXS3[66W2?5E2&V;\:A6T$9!!t@lV@Nh1$34'i-"2[=4TT9tFYY:c4sa_>2%VbV=Cu,b7L4QfDIWZ($j$Dp3\(73"`Rmh=!i<F!(@)A)@/nN:21'p%:OXUJ7$33aK!!!6(!<<)90JN`""TS^`YZLl`(1:,B*Wc<B!!+d(!<E0'!";A?Bk1dEBkLCjE**^.`'+>+0fB"3"98mf!Lai0!"7L1+95Ln<&kM73&q'@!rrK)68K?b1-97O!!=h'!%%gK!APll$nVGZLEm$'-SYi+2Zj@K3)rL\3s0X\"`uU>@m2RH3u8,%0K]=:%KSBu!%@mJ%N>KM%O<qd!rsN"'-7,R&g@;W"!IXi!!!bo<j^81%:!rs)$!rs'(RIUCZ!YtM3!#>\>!#>qB!&k0!'E\=8";VsW!=[3Q!#?g[!It.M(+[1R!!"c@(,Q!ko.r6)49,B*9`[W^,ZXo\!!!d.;[WR@<-81G!rs*)63%!$b!8Z3!!!dVI0#!'!#CLp!!3pu!$qUJ<<<rH!%9W'_#PrL"k7_tg]INlAIK,8!Z(;+!!3rc!%Tc:&6*4cF@6*CAS,@nCihsbFE2F(!%.mL"5VlR3tY*n!!!'#fUoAO%:#'4m,Deii'"TSf_";@@,2(Nfd4uZn69K4j3!rrU?@;KOtDg2Y-DZZU92\?/m!WW@8Bl%Se!!>;7`_1\Y"#CiY&i2C0&i<iL!&=NS"[*%n4Z*3>5t!Fl2(nq^!%g$3,<Hee!$F!d2ZSSo2&-*)!!kY=!<<0U!<='6/iE2>37.AQ!/1CQBE:"2TgM'GK`FOA2'N&U!!*'#E=MtT6js&Y/5Bc#:b?`b@:rIJ2)&GT!!btS!'L<DYQ/i'%:!WY2e3=%VF!#,DD4YAl@#%8WY!!##'*$b\i!<=)j8dPIt*&IXA!%N[[,TJph!(-hg*)$><JH,ZO$AogC!$<uuHufCC;Zd(@M(oMJ2$XJp#Qt,j&-)]/6t^'g))*]D%KHt=!'^HI!!!!>!#ttX!#bhT!#P\P!#>h_!#5JJ3ti5,&HEA($4[%F!">pY0ae=O6O#Ic">LcW$jZi/82*5L+?^Q#2&RkEB)kF%1cZF_3<DMI!3i\ddY7OU%:MuYjJL9Ug\Ycn*-4TK%&">N"A0a$Y[1]Tp&"'8e42aD(2Ch5b,5s%^^$;ilS4ps.q!<=i9(oPXZ!$XW8)ZVHN!%g222&?8n76)6R4#)FL4!j$%&S=0+2'^>h2#np^!%g,L!#D(+!!3q@!!':aX#NU,"Y2P:!#Fo&!5gf]@RE.SFEq80K-aQ%,W(BL0e!/Y!!!!"<&kUa%KK477UCRU.ocR^2]6NgAo9V@7iG#X!Gk[L+?YWtM6:YK%:2,R0RCcPPW2&Ha?Ch-4JH"D#gJHmnRD*Tg=B8[cd1GESb1GLn!0cEiHN/ELJ@&o&u*A\]9MM_B64TJ:e!!kMH(Z@\U1At'BF'U0t!(fRQ4\K6=4WdT\R4eO?1]UB/@RSR;1C@+^@K6BS!(gu-!!=qV!!rgS"%R:@2A+A9K`Hf,!&t".+C8.NK`H5qL]*#0%3`Ii5QQQ=2#p/J:'<NV<Wn*V2#mVL$'o"X7oTI?#m+16#r,rige8;k%:rrN2&#rVRR(/+l2O+dR&!(R5S#=nh]#_`7I!/L[KnUajDK`Et18--K,4UEu*!+#e^!&Xa<&4&0j'/2.>!*`;r1`-35!*K;-!!#6$GmOL94oblmJqXRj"TU^Nd05$IgGT=2RZ.;7"ulWJ74CJ&idc^_70#jZF&#A!!!S&VEhGu]nsneA!!!',"`YQt2=sI<"`]#`2#q%UL-Po]NjUb;4Ae'=DpS8;pAb3SNs0LIZShJ6\HQjho)f#d%:/N*>H!#,/q")@Tu2>>DW"`/0e2>7(nb)QX>IjHuHdlL##AnC*^q>^Ll@g-MOX#9[MS-<I@+Z9->!;S*8!FpLX2?1-#"_<o82?!RuTr\E,@[8nPb^<1m?doKB!?;)bh$&K4FT>>B'M^Of)En=4l$*162?HqG"_BnD2?DWo8-*A(!<<*X!"!QIB$Kg'!79-tBS[9,!&adC%7gM7(>LeID.NlbF*[fl2?*IY"_sFe2?1a5=9/S[XDUg!%:2?3^X,;'.7Xa;r+4gtT.dDIjR#6Mr;6jRDfnMUIKpB>/_!+c-t!rr=;D$r6'WCI,*lbtab-FO'Y!,q:(2?>>\8-*^s+#X&JYQY"-DgV18s7CI<F8AZirK*LD"9?5\gGLkfHE.4'!-J8A!XT$OUAt:b2?:YB"a%Fb2?--U"`h6Y!6mD&r(BQ]ETRuo";.d?ElA"]@Q";N*sHW=]/Bh7G"r0X[KD%@2?mrP"bcr!!(-j2Ao'@0oUmgD%:'\<<b"`^We2@#C6"aM4"2?]@[J,i+@H`B@i"!XNEH*8&C!qQ'cJ-C@tBJorj;Fgh:LClEK.Y@^%"b!^-2?duI"ar572@#'m<rdRR"agJD2@-[mK`Hf,4\Vhu=qCZ66S7,$a'tks>[KBLKek;b/M@?(3mCu2!\p'"!Wi?fFLsgm/3$9S?%)qW$8VftF9+5G>l[t,<YPN6CN3cG<C[;p0a1qb!24W<>6YN:98ikLofE52J=UYX:[&.U%:o`.Ve"98p8=%-Y6F@0t_Bru;Ajb$n?1Kn;h5A:)t#$V.=4Uamb$31(;\j6;rDc[DKmfR8*!%)%TBJAsP"$r8D4^i';m6+lh=*=fKA!m;ss8N-#5mu!JD%H[Imfm\3!!I]R!!*'!4jIgC$NL0$$:+Y8$Pl/B!'M11^J=rO!!#"^0j"c;_-p]dB>&.L"[N,9"Vs'N!!(jj0b?>OFYRiN%7tU@!!+\PG<6@T4WS8C!3S:Sa@AH!EOIe/%:ANq"il9B34!!$C%9*7K2&oUgu:oP:5!<=nW"oqFT"(<nqB/]np!.4`RgAb$X@flo88!'`\"$$Ve<rle5=ZZ\$U]!@!D`\4,!.=nJ!!$L2A&h^P6N]US!!!-ZRVG&]1X8DnDDM`1!!!*$InKes!*]Lf#a5TM!TAM0!&Xa8\,\krGrYtE563gB!WQX95I6sg!<Cb<3s&+n$<J&E!!+;EJi!ja!.4cm#QXL,5NW+L:BCLr!]p\j_=$Eg%:h&J9S!<E0"eQ+P]!5pmO!!3.#<<+]V!!$#!K`GZa3ZT]M=9*RE!JLMr!!*)"2us$[K`Hf,;Zfo61BW=2<<*%"<I^B9BE3_dK`Ek<0*qkO-j0O;%0Za1%2]'Fs8T*KVlNN"K`Hf,!<?sS3XPuiN;rr;#capl$;1GS!9;0i!#Yb:+pnn]s6;NK8HjeJ70#f_!WZu864+%3!!"8<AH8u@AH2]1l8SeF!(?l\!pZcmPQ1Zn:'(E1r)Teh%:2unI/!3ogE#p]1U!'L_fZq1F8#"o#S#<4%7!<<'#!!4kU7hc/2-ia3pgF=rc:DeccAH2c3+9V[u!/1CQ6N_!7.Pqf0'E#=N!&t,d!%\<T7En:(!!"PS3=,ojS-B;-,(pM]!:TrA!!!"4!.[$;7h^RV8ejK45VE*;3\1=4K`D)Q=9/*q1BN71K`D)Q!^Rh,!/1E,!!!!T!`g4n!/1CQ!&suIrrN1S!/1CQ<s_4r7gaqM70!;fP1d82%:5QLlcK`Hf,G<Z-/5Q:]_!WY+B/eC]H#=8`N!/1CQ!([(j!/1E,!'5o@^]?.i!s"2YM#`>3LB*&/K`Hc/!7sA',!c2/1@kKDD+[nr!!!!f!C6]O!'5E+5le[W5l^mAo]lNR!C6]S"$lo?!=EB?#QOj!!^Qf?+92EAcV-Vt!'pTn!_35V!'pTaF%CA7#ljrk"A&ef"$lo&!!!!i!!!?f%VBb^!0mPK!0[DG+>!SU2/SBSNW>%=5!aos%:N%k_L2V:X_BejZs=*.P\F9$#7jDI.<QNR9h=U#%/*GGZ^!/l%jF&r?T0`uMOD+\Z5"91)>9aC`o"%N>W!5MPg!3TlW!1Em8!15ra:^@&j0`dR?"9j\`K)g-SH:n5r!(?lR#QQFX!/qdi"e5QX2[09_(]XR9rW`EqT*mmp!*B[31B.G:!X&KXDRsrT-P-7X5m7l$!/Lnh*<6*k!!#7a4<!#WJ49_C,QRlXAH2c2s$g^=ART%0>d3la%:q]d<c!!iR%!!,emFE2)5B0?n/!Fl*0'/9Lf-q%cZF9#6<!!,>=#S]H&9PJPr&9ImQF'^R%!!!`6#Yg9Q63%$eiIZIZ4p!PE!?;(R>lm&0*<6+083Z];"t!niA7]dG!rtT-@q,gWChs2c"*6gT(di@&#lu)%#B3IJC1T7.1^#!'*f9r$V`"N?!)mqr#%di9,68ueE,VZWA#V@G"_KUm!!+ML*^jFY@5b'$$jZt:.fg\X%n'uMg_m*S%:@rc:&F?cfk5Tg&CBK,bg/--e\Ch7HpDKGkD$90M/F)qC-+Zor\!A$\@;@G`"!A4C>/hKu*!'kUH497)9/NX5S3=._L4TI/9!<Fi@Df'H3F(o`-:gnHZ!!!!a!AX[/7riNjE'53A!Asm/7LW[=B6A5QXA&dV!B!gXD[$1BF"Th1&-HME!BC0?6#q!aG?k5]F$i<J=?HaJ!B!b8#%;C^1`J[^Ai'NR!?N*Y9PJB>#"]=*!C%,]^^p'#%:!?ORDDe!QN!!!9iAnGjBZ2m8m*`-lq@qB2d.mjS("%*)U6=FqL@lP':F:CWW!CI$XO^A3&AiL\h!`B"33<O4o0H_hk,sD;K!`K+t9bENh0EG,R;H%[_Ch8.u5X5o-1'(AU/4XhsA7]gH$$1/60a\K-@q0RB+ojr19hQK,!!-4'*`QQi3+=QA3Xn(MF#4;9!!-)p.52Pt.mcNl((3N"D`8R\!@%XGSH'B*A2+'50`X'2"9&97^hP;]%:!Fu3]81?h)5la1N5lba&=TUG^<<,r['`h;h7l2bg!AOjj!@%V44Tf7M!*1fT;ZfEF!u*Hi'`g5n0`b5S;ZSiX56*P@&QCLd<`]9!!?=$!+uKI$2#q2D!>PWR[8^!(;[*7]!C[&I#rr)F"#rRH>6$?9!'40]<IZb[!$XQ1;`;<'1BB*e"A&o&!'(';!Bgco!53JU"X?/25la1N5l`,c!BDq\5la1N3B[@-!<<*b!C-ZN!C-ZNTq_q*%:!C-ZN!C-[)5X7++:CTSi*!&>+*<H0?2(hHZ%:~>%%EndAGDEmbeddedDoc%%BeginResource: procset Altsys_header 4 0userdict begin /AltsysDict 300 dict def endAltsysDict begin/bdf{bind def}bind def/xdf{exch def}bdf/defed{where{pop true}{false}ifelse}bdf/ndf{1 index where{pop pop pop}{dup xcheck{bind}if def}ifelse}bdf/d{setdash}bdf/h{closepath}bdf/H{}bdf/J{setlinecap}bdf/j{setlinejoin}bdf/M{setmiterlimit}bdf/n{newpath}bdf/N{newpath}bdf/q{gsave}bdf/Q{grestore}bdf/w{setlinewidth}bdf/Xic{matrix invertmatrix concat}bdf/Xq{matrix currentmatrix mark}bdf/XQ{cleartomark setmatrix}bdf/sepdef{ dup where not {AltsysSepDict } if  3 1 roll exch put}bdf/st{settransfer}bdf/colorimage defed /_rci xdf/cntr 0 def/readbinarystring{ /cntr 0 def 2 copy readstring {{dup(\034) search{length exch pop exchdup length 0 ne{dup dup 0 get 32 sub 0 exch put /cntr cntr 1 add def}{pop 1 string dup0 6 index read pop 32 sub put}ifelse3 copyputinterval pop1 add1 index length 1 sub1 index sub dup 0 le {pop pop exit}ifgetinterval}{pop exit} ifelse} loop }if cntr 0 gt {pop 2 copydup length cntr sub cntr getintervalreadbinarystring } if pop exch pop} bdf/_NXLevel2 defed {  _NXLevel2 not {   /colorimage where {userdict eq {/_rci false def } if} if } if} if/md defed{  md type /dicttype eq {  /colorimage where { md eq { /_rci false def }if}if/settransfer where {md eq {/st systemdict /settransfer get def}if}if }if }if/setstrokeadjust defed{ true setstrokeadjust /C{curveto}bdf /L{lineto}bdf /m{moveto}bdf}{ /dr{transform .25 sub round .25 add exch .25 sub round .25 add exch itransform}bdf /C{dr curveto}bdf /L{dr lineto}bdf /m{dr moveto}bdf /setstrokeadjust{pop}bdf }ifelse/privrectpath {  4 -2 roll m dtransform round exch round exch idtransform  2 copy 0 lt exch 0 lt xor {dup 0 exch rlineto exch 0 rlineto neg 0 exch rlineto} {exch dup 0 rlineto exch 0 exch rlineto neg 0 rlineto} ifelse closepath}bdf/rectclip{newpath privrectpath clip newpath}def/rectfill{gsave newpath privrectpath fill grestore}def/rectstroke{gsave newpath privrectpath stroke grestore}def/_fonthacksave false def/currentpacking defed { /_bfh {/_fonthacksave currentpacking def false setpacking} bdf /_efh {_fonthacksave setpacking} bdf}{ /_bfh {} bdf /_efh {} bdf}ifelse/packedarray{array astore readonly}ndf/` {  false setoverprint     /-save0- save def 5 index concat pop storerect left bottom width height rectclip pop  /MMdict_count countdictstack def /MMop_count count 1 sub def userdict begin  /showpage {} def  0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin 10 setmiterlimit [] 0 setdash newpath } bdf/currentpacking defed{true setpacking}if/min{2 copy gt{exch}if pop}bdf/max{2 copy lt{exch}if pop}bdf/xformfont { currentfont exch makefont setfont } bdf/fhnumcolors 1  statusdict begin/processcolors defed {pop processcolors}{/deviceinfo defed {deviceinfo /Colors known {pop deviceinfo /Colors get} if} if} ifelse end def/printerRes  gsave matrix defaultmatrix setmatrix 72 72 dtransform abs exch abs max grestore def/graycalcs[ {Angle Frequency}    {GrayAngle GrayFrequency}  {0 Width Height matrix defaultmatrix idtransform dup mul exch dup mul add sqrt 72 exch div}  {0 GrayWidth GrayHeight matrix defaultmatrix idtransform dup mul exch dup mul add sqrt 72 exch div} ] def/calcgraysteps { forcemaxsteps {maxsteps } {/currenthalftone defed{currenthalftone /dicttype eq}{false}ifelse{currenthalftone beginHalftoneType 4 le{graycalcs HalftoneType 1 sub get exec}{HalftoneType 5 eq{Default begin{graycalcs HalftoneType 1 sub get exec}end}{0 60} ifelse}ifelseend}{currentscreen pop exch }ifelse printerRes 300 max exch div exch 2 copy sin mul round dup mul 3 1 roll cos mul round dup mul add 1 add dup maxsteps gt {pop maxsteps} if dup minsteps lt {pop minsteps} if  } ifelse} bdf/nextrelease defed {  /languagelevel defed not {    /framebuffer defed { 0 40 string framebuffer 9 1 roll 8 {pop} repeatdup 516 eq exch 520 eq or{/fhnumcolors 3 def/currentscreen {60 0 {pop pop 1}}bdf/calcgraysteps {maxsteps} bdf}if}if }if}iffhnumcolors 1 ne { /calcgraysteps {maxsteps} bdf} if/currentpagedevice defed {   currentpagedevice /PreRenderingEnhance known {currentpagedevice /PreRenderingEnhance get{/calcgraysteps {forcemaxsteps {maxsteps}{256 maxsteps min}ifelse} def} if } if} if/gradfrequency 144 defprinterRes 1000 lt { /gradfrequency 72 def} if/adjnumsteps {  dup dtransform abs exch abs max    printerRes div         gradfrequency mul       round         5 max        min        }bdf/goodsep { spots exch get 4 get dup sepname eq exch (_vc_Registration) eq or}bdf/BeginGradation defed{/bb{BeginGradation}bdf}{/bb{}bdf}ifelse/EndGradation defed{/eb{EndGradation}bdf}{/eb{}bdf}ifelse/bottom -0 def /delta -0 def /frac -0 def /height -0 def /left -0 def /numsteps1 -0 def /radius -0 def /right -0 def /top -0 def /width -0 def /xt -0 def /yt -0 def /df currentflat def /tempstr 1 string def /clipflatness currentflat def /inverted?  0 currenttransfer exec .5 ge def/tc1 [0 0 0 1] def /tc2 [0 0 0 1] def /storerect{/top xdf /right xdf /bottom xdf /left xdf /width right left sub def /height top bottom sub def}bdf/concatprocs{ systemdict /packedarray known  {dup type /packedarraytype eq 2 index type /packedarraytype eq or}{false}ifelse { /proc2 exch cvlit def /proc1 exch cvlit defproc1 aload pop proc2 aload popproc1 length proc2 length add packedarray cvx } { /proc2 exch cvlit def /proc1 exch cvlit def/newproc proc1 length proc2 length add array defnewproc 0 proc1 putinterval newproc proc1 length proc2 putintervalnewproc cvx }ifelse}bdf/i{dup 0 eq {pop df dup}  {dup} ifelse  /clipflatness xdf setflat}bdfversion cvr 38.0 le{/setrgbcolor{currenttransfer exec 3 1 rollcurrenttransfer exec 3 1 rollcurrenttransfer exec 3 1 rollsetrgbcolor}bdf}if/vms {/vmsv save def} bdf/vmr {vmsv restore} bdf/vmrs{vmsv restore /vmsv save def}bdf/eomode{  {/filler /eofill load def /clipper /eoclip load def} {/filler /fill load def /clipper /clip load def} ifelse}bdf/normtaper{}bdf/logtaper{9 mul 1 add log}bdf/CD{ /NF exch def  {    exch dup /FID ne 1 index/UniqueID ne and{exch NF 3 1 roll put}{pop pop}ifelse }forall  NF}bdf/MN{ 1 index length    /Len exch def  dup length Len add   string dup     Len      4 -1 roll     putinterval    dup      0       4 -1 roll    putinterval   }bdf/RC{4 -1 roll /ourvec xdf 256 string cvs(|______)anchorsearch {1 index MN cvn/NewN exch def cvn findfont dup maxlength dict CD dup/FontName NewN put dup /Encoding ourvec put NewN exch definefont pop}{pop}ifelse}bdf/RF{  dup       FontDirectory exch    known      {pop 3 -1 roll pop}   {RC} ifelse}bdf/FF{dup 256 string cvs(|______)exch MN cvn dup FontDirectory exch known {exch pop findfont 3 -1 roll pop} {pop dup findfont dup maxlength dict CD dup dup /Encoding exch /Encoding get 256 array copy 7 -1 roll  {3 -1 roll dup 4 -2 roll put}forall put definefont} ifelse}bdf/RCJ{4 -1 roll  /ourvec xdf     256 string cvs    (|______) anchorsearch {pop    cvn dup FDFJ exch 1 index eq {_bfh findfont _efh dup maxlength dict CD dup /FontName 3 index put dup /Encoding ourvec put 1 index exch definefont pop }{exch pop} ifelse } {pop}     ifelse}bdf/RFJ{  dup       FontDirectory exch    known      {pop 3 -1 roll pop}   {RCJ}  ifelse}bdf/hasfont{ /resourcestatus where  {pop /Font resourcestatus{ pop pop true}{ false}ifelse } {dup FontDirectory exch known{pop true}{256 stringcvs(fonts/) exch MNstatus{pop pop pop pop true}{false}ifelse}ifelse } ifelse}bdf/FDFJ{ dup    hasfont   not    {   pop/Ryumin-Light-83pv-RKSJ-Hhasfont {/Ryumin-Light-83pv-RKSJ-H}{/Courier}ifelse  } if}bdf/FFJ{ _bfh dup      256 string cvs   (|______)exch MN  cvn      dup      FontDirectory exch known    {     exch pop findfont 3 -1 roll pop  } {     pop FDFJ dup findfont dup maxlength dict CD dup dup /Encoding exch /Encoding get 256 array copy 7 -1 roll { 3 -1 roll dup 4 -2 roll put }forallput definefont  } ifelse _efh}bdf/GS { dup  hasfont  {FFJcurtextmtx makefont setfontexch5 1 rolltspop } {pop popts } ifelse} bdf/RCK{4 -1 roll  /ourvec xdf     256 string cvs    (|______) anchorsearch {pop    cvn dup FDFK exch 1 index eq {_bfh findfont _efh dup maxlength dict CD dup /FontName 3 index put dup /Encoding ourvec put 1 index exch definefont pop }{exch pop} ifelse } {pop}     ifelse}bdf/RFK{  dup       FontDirectory exch    known      {pop 3 -1 roll pop}   {RCK}  ifelse}bdf/hasfont{ /resourcestatus where  {pop /Font resourcestatus{ pop pop true}{ false}ifelse } {dup FontDirectory exch known{pop true}{256 stringcvs(fonts/) exch MNstatus{pop pop pop pop true}{false}ifelse}ifelse } ifelse}bdf/FDFK{ dup    hasfont   not    {   pop/JCsmhasfont {/JCsm}{/Courier}ifelse  } if}bdf/FFK{ _bfh dup      256 string cvs   (|______)exch MN  cvn      dup      FontDirectory exch known    {     exch pop findfont 3 -1 roll pop  } {     pop FDFK dup findfont dup maxlength dict CD dup dup /Encoding exch /Encoding get 256 array copy 7 -1 roll { 3 -1 roll dup 4 -2 roll put }forallput definefont  } ifelse _efh}bdf/RCTC{4 -1 roll  /ourvec xdf     256 string cvs    (|______) anchorsearch {pop    cvn dup FDFTC exch 1 index eq {_bfh findfont _efh dup maxlength dict CD dup /FontName 3 index put dup /Encoding ourvec put 1 index exch definefont pop }{exch pop} ifelse } {pop}     ifelse}bdf/RFTC{  dup       FontDirectory exch    known      {pop 3 -1 roll pop}   {RCTC}  ifelse}bdf/FDFTC{ dup    hasfont   not    {   pop/DFMing-Lt-HK-BFhasfont {/DFMing-Lt-HK-BF}{/Courier}ifelse  } if}bdf/FFTC{ _bfh dup      256 string cvs   (|______)exch MN  cvn      dup      FontDirectory exch known    {     exch pop findfont 3 -1 roll pop  } {     pop FDFTC dup findfont dup maxlength dict CD dup dup /Encoding exch /Encoding get 256 array copy 7 -1 roll { 3 -1 roll dup 4 -2 roll put }forallput definefont  } ifelse _efh}bdf/fps{ currentflat    exch      dup 0 le{pop 1}if  {dup setflat 3 index stopped{1.3 mul dup 3 index gt{pop setflat pop pop stop}if} {exit} ifelse }loop  pop setflat pop pop}bdf/fp{100 currentflat fps}bdf/clipper{clip}bdf /W{/clipper load 100 clipflatness dup setflat fps}bdfuserdict begin /BDFontDict 29 dict def endBDFontDict begin/bu{}def/bn{}def/setTxMode{av 70 ge{pop}if pop}def/gm{m}def/show{pop}def/gr{pop}def/fnt{pop pop pop}def/fs{pop}def/fz{pop}def/lin{pop pop}def/:M {pop pop} def/sf {pop} def/S {pop} def/@b {pop pop pop pop pop pop pop pop} def/_bdsave /save load def/_bdrestore /restore load def/save { dup /fontsave eq {null} {_bdsave} ifelse } def/restore { dup null eq { pop } { _bdrestore } ifelse } def/fontsave null defend/MacVec 256 array def MacVec 0 /Helvetica findfont/Encoding get 0 128 getinterval putintervalMacVec 127 /DEL put MacVec 16#27 /quotesingle put MacVec 16#60 /grave put/NUL/SOH/STX/ETX/EOT/ENQ/ACK/BEL/BS/HT/LF/VT/FF/CR/SO/SI/DLE/DC1/DC2/DC3/DC4/NAK/SYN/ETB/CAN/EM/SUB/ESC/FS/GS/RS/USMacVec 0 32 getinterval astore pop/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls/registered/copyright/trademark/acute/dieresis/notequal/AE/Oslash/infinity/plusminus/lessequal/greaterequal/yen/mu/partialdiff/summation/product/pi/integral/ordfeminine/ordmasculine/Omega/ae/oslash /questiondown/exclamdown/logicalnot/radical/florin/approxequal/Delta/guillemotleft/guillemotright/ellipsis/nbspace/Agrave/Atilde/Otilde/OE/oe/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/lozenge/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave/Oacute/Ocircumflex/apple/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caronMacVec 128 128 getinterval astore pop/findheaderfont { /Helvetica findfont } defend %. AltsysDict%%EndResource%%EndProlog%%BeginSetupAltsysDict begin_bfh _efh end %. AltsysDict%%EndSetupAltsysDict begin /onlyk4{false}ndf/ccmyk{dup 5 -1 roll sub 0 max exch}ndf/cmyk2gray{ 4 -1 roll 0.3 mul 4 -1 roll 0.59 mul 4 -1 roll 0.11 mul add add add 1 min neg 1 add}bdf/setcmykcolor{1 exch sub ccmyk ccmyk ccmyk pop setrgbcolor}ndf/maxcolor {  max max max  } ndf/maxspot { pop} ndf/setcmykcoloroverprint{4{dup -1 eq{pop 0}if 4 1 roll}repeat setcmykcolor}ndf/findcmykcustomcolor{5 packedarray}ndf/setcustomcolor{exch aload pop pop 4{4 index mul 4 1 roll}repeat setcmykcolor pop}ndf/setseparationgray{setgray}ndf/setoverprint{pop}ndf /currentoverprint false ndf/cmykbufs2gray{ 0 1 2 index length 1 sub { 4 index 1 index get 0.3 mul 4 index 2 index get 0.59 mul 4 index 3 index get 0.11 mul 4 index 4 index get add add add cvi 255 min255 exch sub2 index 3 1 roll put }for 4 1 roll pop pop pop}bdf/colorimage{ pop pop [5 -1 roll/exec cvx 6 -1 roll/exec cvx 7 -1 roll/exec cvx 8 -1 roll/exec cvx/cmykbufs2gray cvx ]cvx  image}%. version 47.1 on Linotronic of Postscript defines colorimage incorrectly (rgb model only)version cvr 47.1 le statusdict /product get (Lino) anchorsearch{pop pop true}{pop false}ifelseand{userdict begin bdf end}{ndf}ifelsefhnumcolors 1 ne {/yt save def} if/customcolorimage{ aload pop (_vc_Registration) eq  {pop pop pop pop separationimage } {/ik xdf /iy xdf /im xdf /ic xdfic im iy ik cmyk2gray /xt xdfcurrenttransfer{dup 1.0 exch sub xt mul add}concatprocsst image } ifelse}ndffhnumcolors 1 ne {yt restore} iffhnumcolors 3 ne {/yt save def} if/customcolorimage{ aload pop  (_vc_Registration) eq  {pop pop pop pop separationimage } {/ik xdf /iy xdf /im xdf /ic xdf1.0 dup ic ik add min sub 1.0 dup im ik add min sub 1.0 dup iy ik add min sub /ic xdf /iy xdf /im xdfcurrentcolortransfer4 1 roll {dup 1.0 exch sub ic mul add}concatprocs 4 1 roll {dup 1.0 exch sub iy mul add}concatprocs 4 1 roll {dup 1.0 exch sub im mul add}concatprocs 4 1 roll setcolortransfer{/dummy xdf dummy}concatprocs{dummy}{dummy}true 3 colorimage } ifelse}ndffhnumcolors 3 ne {yt restore} iffhnumcolors 4 ne {/yt save def} if/customcolorimage{ aload pop (_vc_Registration) eq  {pop pop pop pop separationimage } {/ik xdf /iy xdf /im xdf /ic xdfcurrentcolortransfer{1.0 exch sub ik mul ik sub 1 add}concatprocs 4 1 roll{1.0 exch sub iy mul iy sub 1 add}concatprocs 4 1 roll{1.0 exch sub im mul im sub 1 add}concatprocs 4 1 roll{1.0 exch sub ic mul ic sub 1 add}concatprocs 4 1 rollsetcolortransfer{/dummy xdf dummy}concatprocs{dummy}{dummy}{dummy}true 4 colorimage } ifelse}ndffhnumcolors 4 ne {yt restore} if/separationimage{image}ndf/spotascmyk false ndf/newcmykcustomcolor{6 packedarray}ndf/inkoverprint false ndf/setinkoverprint{pop}ndf /setspotcolor {  spots exch get dup 4 get (_vc_Registration) eq {pop 1 exch sub setseparationgray} {0 5 getinterval exch setcustomcolor} ifelse}ndf/currentcolortransfer{currenttransfer dup dup dup}ndf/setcolortransfer{st pop pop pop}ndf/fas{}ndf/sas{}ndf/fhsetspreadsize{pop}ndf/filler{fill}bdf /F{gsave {filler}fp grestore}bdf/f{closepath F}bdf/S{gsave {stroke}fp grestore}bdf/s{closepath S}bdf  userdict /islevel2 systemdict /languagelevel known dup {pop systemdict /languagelevel get 2 ge } if put  islevel2 not {/currentcmykcolor{0 0 0 1 currentgray sub} ndf } if  /tc {gsavesetcmykcolor currentcmykcolorgrestore } bind def /testCMYKColorThrough {tc add add add 0 ne } bind def /fhiscomposite where not {userdict /fhiscompositeislevel2{gsave 1 1 1 1 setcmykcolor currentcmykcolor grestoreadd add add 4 eq}{1 0 0 0 testCMYKColorThrough0 1 0 0 testCMYKColorThrough0 0 1 0 testCMYKColorThrough0 0 0 1 testCMYKColorThroughand and and} ifelseput } { pop } ifelse/bc4 [0 0 0 0] def /_lfp4 { 1 pop  /yt xdf        /xt xdf        /ang xdf       storerect /taperfcn xdf /k2 xdf /y2 xdf /m2 xdf /c2 xdf /k1 xdf /y1 xdf /m1 xdf /c1 xdf c1 c2 sub abs m1 m2 sub abs y1 y2 sub abs k1 k2 sub abs maxcolor       calcgraysteps mul abs round   height abs adjnumsteps    dup 1 lt {pop 1} if     1 sub /numsteps1 xdf currentflat mark     currentflat clipflatness   /delta top bottom sub numsteps1 1 add div def  /right right left sub def   /botsv top delta sub def   {{Wxt yt translate ang rotatext neg yt neg translate dup setflat /bottom botsv def0 1 numsteps1 {numsteps1 dup 0 eq {pop pop 0.5} {div} ifelse taperfcn /frac xdfbc4 0 c2 c1 sub frac mul c1 add putbc4 1 m2 m1 sub frac mul m1 add putbc4 2 y2 y1 sub frac mul y1 add putbc4 3 k2 k1 sub frac mul k1 add putbc4 vc1 index setflat { mark {newpath left bottom right delta rectfill}stopped{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}{cleartomark exit}ifelse}loop/bottom bottom delta sub def}for}gsave stopped grestore{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}{exit}ifelse }loop cleartomark setflat}bdf/bcs [0 0] def /_lfs4 { /yt xdf        /xt xdf        /ang xdf       storerect /taperfcn xdf /tint2 xdf       /tint1 xdf       bcs exch 1 exch put     tint1 tint2 sub abs     bcs 1 get maxspot     calcgraysteps mul abs round   height abs adjnumsteps    dup 2 lt {pop 2} if     1 sub /numsteps1 xdf currentflat mark     currentflat clipflatness   /delta top bottom sub numsteps1 1 add div def  /right right left sub def   /botsv top delta sub def   {{Wxt yt translate ang rotatext neg yt neg translate dup setflat /bottom botsv def0 1 numsteps1 {numsteps1 div taperfcn /frac xdfbcs 01.0 tint2 tint1 sub frac mul tint1 add subput bcs vc1 index setflat { mark {newpath left bottom right delta rectfill}stopped{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}{cleartomark exit}ifelse}loop/bottom bottom delta sub def}for}gsave stopped grestore{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}{exit}ifelse }loop cleartomark setflat}bdf/_rfs6 { /tint2 xdf       /tint1 xdf       bcs exch 1 exch put     /inrad xdf       /radius xdf       /yt xdf        /xt xdf        tint1 tint2 sub abs     bcs 1 get maxspot     calcgraysteps mul abs round   radius inrad sub abs    adjnumsteps       dup 1 lt {pop 1} if     1 sub /numsteps1 xdf radius inrad sub numsteps1 dup 0 eq {pop} {div} ifelse  2 div /halfstep xdf     currentflat mark     currentflat clipflatness   {{dup setflat W 0 1 numsteps1 {dup /radindex xdfnumsteps1 dup 0 eq {pop pop 0.5} {div} ifelse /frac xdfbcs 0tint2 tint1 sub frac mul tint1 addput bcs vc1 index setflat { newpath mark xt yt radius inrad sub 1 frac sub mul halfstep add inrad add 0 360{ arcradindex numsteps1 ne inrad 0 gt or {xt yt numsteps1 0 eq{ inrad } { radindex 1 add numsteps1 div 1 exch subradius inrad sub mul halfstep add inrad add}ifelsedup xt add yt moveto360 0 arcn } iffill}stopped{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}{cleartomark exit}ifelse}loop}for}gsave stopped grestore{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}{exit}ifelse }loop cleartomark setflat}bdf/_rfp6 { 1 pop  /k2 xdf /y2 xdf /m2 xdf /c2 xdf /k1 xdf /y1 xdf /m1 xdf /c1 xdf /inrad xdf       /radius xdf       /yt xdf        /xt xdf        c1 c2 sub abs m1 m2 sub abs y1 y2 sub abs k1 k2 sub abs maxcolor      calcgraysteps mul abs round  radius inrad sub abs   adjnumsteps      dup 1 lt {pop 1} if    1 sub /numsteps1 xdf radius inrad sub numsteps1 dup 0 eq {pop} {div} ifelse  2 div /halfstep xdf    currentflat mark    currentflat clipflatness  {{dup setflat W 0 1 numsteps1 {dup /radindex xdfnumsteps1 dup 0 eq {pop pop 0.5} {div} ifelse /frac xdfbc4 0 c2 c1 sub frac mul c1 add putbc4 1 m2 m1 sub frac mul m1 add putbc4 2 y2 y1 sub frac mul y1 add putbc4 3 k2 k1 sub frac mul k1 add putbc4 vc1 index setflat { newpath mark xt yt radius inrad sub 1 frac sub mul halfstep add inrad add 0 360{ arcradindex numsteps1 ne inrad 0 gt or {xt yt numsteps1 0 eq{ inrad } { radindex 1 add numsteps1 div 1 exch subradius inrad sub mul halfstep add inrad add}ifelsedup xt add yt moveto360 0 arcn } iffill}stopped{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}{cleartomark exit}ifelse}loop}for}gsave stopped grestore{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}{exit}ifelse }loop cleartomark setflat}bdf/lfp4{_lfp4}ndf/lfs4{_lfs4}ndf/rfs6{_rfs6}ndf/rfp6{_rfp6}ndf/cvc [0 0 0 1] def /vc{ AltsysDict /cvc 2 index put  aload length dup 4 eq {pop dup -1 eq{pop setrgbcolor}{setcmykcolor}ifelse} {6 eq {sethexcolor} {setspotcolor} ifelse } ifelse}bdf 0 setseparationgray/imgr {1368 13810.1 1410.52 13852.6 } def /bleed 8.5039 def /clpr {1359.5 13801.6 1419.02 13861.1 } def /xs 1 def /ys 1 def /botx 0 def /overlap 0 def /wdist 18 def 0 2 mul fhsetspreadsize 0 0 ne {/df 0 def /clipflatness 0 def} if /maxsteps 256 def /forcemaxsteps false def /minsteps 0 def  userdict begin /AGDOrigMtx matrix currentmatrix def end vms-1368 -13810 translate/currentpacking defed{false setpacking}if /spots[1 0 0 0 (Process Cyan) false newcmykcustomcolor0 1 0 0 (Process Magenta) false newcmykcustomcolor0 0 1 0 (Process Yellow) false newcmykcustomcolor0 0 0 1 (Process Black) false newcmykcustomcolor]def/cvtr {1 exch sub 3 1 roll} def/vr { [ 3 index 3 index 3 index cvtr cvtr cvtr 0 ] fhiscomposite not {vc pop pop pop}{pop setrgbcolor}ifelse} def/vc {AltsysDict /cvc 2 index put aload length dup 4 eq {pop dup -0.2 ge {setcmykcolor} {pop vr} ifelse} {6 eq {sethexcolor} {setspotcolor} ifelse} ifelse} bdfn[] 0 d3.863708 M1 w0 j0 Jfalse setoverprint0 ifalse eomode[0 0 0 1] vcvms1368 13852.6299 m1410.5197 13852.6299 L1410.5197 13810.1102 L1368 13810.1102 L1368 13852.6299 Ln1410.5197 13829.9173 m1410.5197 13810.11 L1395.3058 13810.11 L1394.6261 13810.6129 1393.4972 13811.5244 1393.1162 13812.2864 C1392.5574 13813.4039 1392.8035 13815.2059 1391.8124 13815.8928 C1390.1022 13817.078 1388.4429 13815.7912 1386.9698 13815.8082 C1385.4967 13815.8251 1383.7018 13816.6547 1382.398 13818.314 C1381.0943 13819.9733 1380.5863 13822.6315 1379.4857 13823.7152 C1378.3851 13824.7988 1375.8283 13825.476 1375.8283 13825.476 C1375.8283 13825.476 1376.912 13826.3395 1379.0793 13826.1025 C1381.2466 13825.8654 1382.8044 13824.8157 1383.668 13824.0368 C1384.5315 13823.258 1385.4511 13822.9806 1386.0893 13823.4273 C1386.5973 13823.7829 1386.6777 13824.2411 1386.0216 13825.1374 C1384.8194 13826.7798 1382.906 13826.9999 1382.906 13826.9999 C1382.906 13826.9999 1384.921 13828.1512 1388.4259 13826.6612 C1391.931 13825.1713 1391.4842 13823.9549 1393.5903 13822.8347 C1395.9778 13821.5649 1398.8563 13822.4792 1398.8563 13822.4792 C1398.8563 13822.4792 1396.7397 13823.2749 1395.6391 13824.7649 C1394.7375 13825.9855 1394.771 13826.9028 1393.8988 13828.0691 C1392.8622 13829.4549 1390.7118 13830.42 1390.7118 13830.42 C1390.7118 13830.42 1393.675 13831.5714 1397.4001 13830.0814 C1401.1252 13828.5914 1401.684 13826.9491 1403.6651 13827.1353 C1405.6461 13827.3216 1405.6999 13829.4316 1405.5276 13830.1661 C1405.2059 13831.5375 1404.0206 13832.7058 1404.0206 13832.7058 C1404.0206 13832.7058 1407.8197 13832.2992 1410.5197 13829.9173 C[0 0.6902 0.549 -1]  vcf n1401.4364 13818.6331 m1406.1264 13818.6331 L1406.1264 13813.9434 L1401.4364 13813.9434 L1401.4364 13818.6331 L[0.549 0.5412 0.5294 -1]  vcf n1401.4364 13841.8216 m1406.1264 13841.8216 L1406.1264 13837.1318 L1401.4364 13837.1318 L1401.4364 13841.8216 Lf nvmrvmrend%%Trailer